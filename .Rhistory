tmp <- draccaj(Y[f,], bud$bird[f], "proc", 0.5, 3);
drake[[dg]] <- as.numeric(as.dist(cor(apply(tmp,2,rank), method = "spearman")));
names(drake[[dg]]) <- .make.dist.names(colnames(tmp));
cat(dg, sum(f), length(unique(bud$bird[f])), "\n", sep = "\t");
}}
names(drake)
drake <- list();
for(dg in levels(bud$date.group)){
f <- bud$date.group == dg;
locations <- aggregate(bud$start.time[f], as.list(bud[f,c(162,164)]), length)
f <- bud$date.group == dg & bud$bird %in% locations$bird[locations$x > 1];
if(any(f)){
tmp <- draccaj(Y[f,], bud$bird[f], "proc", 0.5, 3);
drake[[dg]] <- as.numeric(as.dist(cor(apply(tmp,2,rank), method = "spearman")));
names(drake[[dg]]) <- .make.dist.names(colnames(tmp));
cat(dg, sum(f), length(unique(bud$bird[f])), "\n", sep = "\t");
}}
same.cage <- distance(locations$cage)
same.cage <- dist(locations$cage)
same.cage <- differences(locations$cage, method = "cheb")
same.cage <- differences(as.matrix(locations$cage,ncol = 1), method = "cheb")
same.cage
same.cage <- dist(locations$cage)
same.cage[same.cage > 0] <- 1
library(ecodist)
tmpman <- mantel(drake[[dg]] ~ same.cage)
length(drake[[dg]])
length(same.cage)
sum(f)
tmpcage <- aggregate(bud$start.time[f], as.list(bud[f,c(152,154)]), length)
tmpcage
tmpcage <- aggregate(bud$start.time[f], as.list(bud[f,c(162,164)]), length)
dim(tmpcage
)
tmpcage
same.cage <- dist(tmpcage$cage)
same.cage[same.cage > 0] <- 1
length(drake[[dg]])
length(same.cage)
tmpman <- mantel(drake[[dg]] ~ same.cage)
tmpman
same.bird <- dist(tmpcage$bird)
same.bird[same.bird > 0] <- 1
tmpman <- mantel(drake[[dg]] ~ same.cage - same.bird, nperm = 5000)
tmpman <- mantel(drake[[dg]] ~ same.cage + same.bird, nperm = 5000)
tmpman <- mantel(drake[[dg]] ~ same.bird, nperm = 5000)
summary(same.bird)
rm(same.bird)
tmpman <- mantel(drake[[dg]] ~ same.cage, nperm = 5000)
tmpman
plot(drake[[dg]] ~ factor(same.cage, levels = c("yes","no")))
summary(drake[[dg]])
plot(drake[[dg]] ~ factor(same.cage, labels = c("yes","no")))
same.cage <- list();
for(dg in levels(bud$date.group)){
f <- bud$date.group == dg;
locations <- aggregate(bud$start.time[f], as.list(bud[f,c(162,164)]), length)
f <- bud$date.group == dg & bud$bird %in% locations$bird[locations$x > 1];
if(any(f)){
tmp <- aggregate(bud$start.time[f], as.list(bud[f,c(162,164)]), length);
same.cage[[dg]] <- dist(tmp$cage);
same.cage[[dg]][same.cage[[dg]] > 0] <- 1;
}}
dg <- names(same.cage)[1]
dg
tmpman <- mantel(drake[[dg]] ~ same.cage[[dg]], nperm = 10000)
summary(same.cage)
summary(same.cage[[dg]])
dg <- names(same.cage)[2]
summary(same.cage[[dg]])
tmpman <- mantel(drake[[dg]] ~ same.cage[[dg]], nperm = 10000)
tmpman
tmpman <- matrix(tmpman, nrow = 1, dimnames = list(dg, names(tmpman)))
tmpman <- as.data.frame(tmpman)
tmpman
for(dg in names(same.cage)[-(1:2)]){
tmp <- NULL;
try(tmp <- mantel(drake[[dg]] ~ same.cage[[dg]], nperm = 10000), silent = T);
if(!is.null(tmp)){
tmpman <- rbind(tmpman, as.data.frame(matrix(tmp, nrow = 1, dimnames = list(dg, names(tmp)))));
}
}
dim(tmpman)
plot(tmpman$mantelr ~ as.numeric(rownames(tmpman)), xlab = 'date group')
plot(tmpman$pval2 ~ as.numeric(rownames(tmpman)), xlab = 'date group')
plot(log(tmpman$pval2,10) ~ as.numeric(rownames(tmpman)), xlab = 'date group')
plot(drake[["10"]] ~ factor(same.cage[["10"]], labels = c("yes","no")))
plot(drake[["2"]] ~ factor(same.cage[["2"]], labels = c("yes","no")))
par(mfrow = c(4,5), mar = c(5,10,10,2)/3, mgp = 2 * c(3,1,0)/3)
for(dg in names(drake)[-1]){
plot(drake[[dg]] ~ factor(same.cage[[dg]], labels = c("yes","no")), xlab = NULL, ylab = "density correlation", main = paste("date group", dg))
}
par(mfrow = c(4,5), mar = c(5,10,10,2)/3, mgp = 2 * c(3,1,0)/3)
for(dg in names(drake)){
plot(drake[[dg]] ~ factor(same.cage[[dg]], labels = c("yes","no")), xlab = NULL, ylab = "density correlation", main = paste("date group", dg))
}
par(mfrow = c(4,5), mar = c(5,10,10,2)/3, mgp = 2 * c(3,1,0)/3)
for(dg in names(drake)[-1]){
plot(drake[[dg]] ~ factor(same.cage[[dg]], labels = c("yes","no")), xlab = NULL, ylab = "density correlation", main = paste("date group", dg))
}
for(dg in names(drake)[-1]){
par(mfrow = c(4,5), mar = c(5,10,10,2)/3, mgp = 2 * c(3,1,0)/3)
for(dg in names(drake)[-1]){
plot(drake[[dg]] ~ factor(same.cage[[dg]], labels = c("yes","no")), xlab = NULL, ylab = "density correlation", main = paste("date group", dg), ylim = c(-1,1))
}
dev.off()
q('no')
x <- runif(100,1,2)
x <- runif(100,0,1)
summary(x)
sum(x * log(x))
sum(x * log(x,2))
sum(x * log(x)) / log(2)
library(differences)
library(MASS)
X <- rbind(mvrnorm(50,c(0,0),diag(1)), mvrnorm(50,c(1,1),diag(1)))
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,c(1,1),diag(2)))
drake <- draccaj(X,rep(1:50,each = 2))
plot(drake)
source("R/neighbor_density.R")
drake <- draccaj(X,rep(1:50,each = 2))
summary(drake)
drake <- draccaj(X,rep(1:2,each = 50))
summary(drake)
apply(drake,1,sum)
apply(drake,2,sum)
plot(drake)
plot(X, pch = rep(1:2,each = 50))
my.h <- function(x, base = 2){-sum(ifelse(x>0,x * log(x, base), 0))}
my.h(drake[,1])
my.h(drake[,2])
my.h(drake[,1] * drake[,2])
my.conditional.h <- function(x,y,base=2){
-sum(ifelse(x > 0 & y > 0, x * y * log(y,base),0));
}
my.conditional.h(drake[,1],drake[,2])
my.conditional.h(drake[,2],drake[,1])
my.conditional.h(drake[,1],drake[,2])+my.conditional.h(drake[,2],drake[,1])
my.h(apply(drake,1,function(x){exp(sum(log(x)))}))
drake <- draccaj(X,rep(1:2,each = 50)p.neighbors = 0.1)
drake <- draccaj(X,rep(1:2,each = 50),p.neighbors = 0.1)
summary(drake)
apply(drake,1,sum)
apply(drake,2,sum)
nay <- neighbors(X,n.neighbors = 5)
dim(nay)
?neighbor.density
nay <- neighbor.density(nay[,10], 2, 10, 100)
nay <- neighbor.density(neighbors(X,n.neighbors = 10)[,10], 2, 10, 100)
sum(nay)
my.mi
my.mi <- function(x,y,xy){
xy * (log(xy) - log(x) - log(y));
}
my.mi <- function(x,y,xy,base = 2){
xy * (log(xy,base) - log(x,base) - log(y,base));
}
my.mi(drake[,1], drake[,2], nay)
my.mi <- function(x,y,xy,base = 2){
sum(xy * (log(xy,base) - log(x,base) - log(y,base)));
}
my.mi <- function(x,y,xy,base = 2){
my.mi(drake[,1], drake[,2], nay)
my.mi(drake[,1]/sum(drake[,1]), drake[,2] / sum(drake[,2]), nay / sum(nay))
my.h <- function(x, base = 2){-sum(x * log(x,base));}
my.h(nay / sum(nay))
nay <- neighbor.density(neighbors(X,n.neighbors = 5)[,5], 2, 5, 100)
sum(nay)
apply(drake,1,sum)
apply(drake,2,sum)
args(neighbor.density)
?circles
?circle
library(graph)
library(lattice)
?circle
?circles 
?polygon
circle <- 0:200 * pi / 100
circle <- matrix(c(cos(circle),sin(circle)), ncol = 2)
segments(circle)
segments(circle[,1], circle[,2])
polygon(circle)
plot(X,asp=1,pch = rep(1:2,each = 50))
for(i in 1:nrow(X)){polygon(X[i,1] + circle[,1], X[i,2] + circle[,2])}
plot(X,asp=1,pch = rep(1:2,each = 50))
f <- rank(drake[,1],decreasing = T)<11
f <- rank(drake[,1],descending = T)<11
args(rank)
f <- rank(-drake[,1])<11
text(X[f,], rank(-drake[f,1]))
sum(f)
rank(-drake[f,1])
args(text)
dim(X[f,])
plot(X,asp=1,pch = rep(1:2,each = 50))
text(X[f,1], X[f,2], as.character(rank(-drake[f,1])))
f <- rank(-drake[,2])<11
text(X[f,1], X[f,2], as.character(rank(-drake[f,2])))
plot(X,asp=1,pch = rep(1:2,each = 50))
for(j in 1:2){
f <- rank(-drake[,j])<11
text(X[f,1], X[f,2], as.character(rank(-drake[f,j])), col = 1+j)
}
?cor
nay <- neighbors(X,n.neighbors=10)
hist(nay[,10])
hist(log(nay[,10]))
library(boot)
R
R <- corr(X,nay[,10])
R
corr(X)
nay <- neighbors(X,n.neighbors=20)
R <- numeric(21)
R[1] <- corr(X)
R <- numeric(20)
R <- numeric(25)
for(n in 1:25){
R[n] <- corr(draccaj(X,rep(1:2,each = 50), p.neighbors = n/50),neighbors(X,n.neighbors=n)[,n])
}
plot(R, type = 'b')
RW <- R
for(n in 1:25){
R[n] <- corr(draccaj(X,rep(1:2,each = 50), p.neighbors = n/50))
}
points(R,type = 'b', pch = 2)
plot(R, type = 'b',ylim = c(-1,1))
points(RW,type = 'b', pch = 2)
nay <- neighbors(X,n.neighbors=50)
R <- numeric(50)
RW <- numeric(50)
for(n in 1:50){
R[n] <- corr(draccaj(X,rep(1:2,each = 50), p.neighbors = n/50));
R[n] <- corr(draccaj(X,rep(1:2,each = 50), p.neighbors = n/50),nay[,n])
for(n in 1:50){
tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
R[n] <- corr(tmp);
RW[n] <- corr(tmp,nay[,n]);
}
plot(R, type = 'b',ylim = c(-1,1))
points(RW,type = 'b', pch = 2)
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,c(10,10),diag(2)))
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'b',ylim = c(-1,1));
points(RW,type = 'b', pch = 2)
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'b',ylim = c(-1,1));points(RW,type = 'b',pch = 2);
par(mfrow = c(3,3), mar = c(10,10,10,2)/3, mgp = 2* c(3,1,0)/3))
par(mfrow = c(3,3), mar = c(10,10,10,2)/3, mgp = 2* c(3,1,0)/3)
for(mu in 1:9){
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,rep(mu,2),diag(2)))
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'b',ylim = c(-1,1), main = mu);points(RW,type = 'b',pch = 2);
}
for(mu in 1:9 / 3){
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,rep(mu,2),diag(2)))
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'b',ylim = c(-1,1), main = round(mu,2));points(RW,type = 'b',pch = 2);
}
for(mu in 1:9 / 3){
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,rep(mu,2),diag(2)));
nay <- neighbors(X,n.neighbors=50);
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'b',ylim = c(-1,1), main = round(mu,2));points(RW,type = 'b',pch = 2);
}
for(mu in 1:9 / 3){
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,rep(mu,2),diag(2)));
nay <- neighbors(X,n.neighbors=50);
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay[,n]);
 }
 plot(R, type = 'l',ylim = c(-1,1), main = round(mu,2));points(RW,type = 'l',col = 4);
}
for(mu in 1:9 / 3){
X <- rbind(mvrnorm(50,c(0,0),diag(2)), mvrnorm(50,rep(mu,2),diag(2)));
nay <- neighbors(X,n.neighbors=1);
for(n in 1:50){
 tmp <- draccaj(X,rep(1:2,each = 50), p.neighbors = n/50);
 R[n] <- corr(tmp);
 RW[n] <- corr(tmp,nay);
 }
 plot(R, type = 'l',ylim = c(-1,1), main = round(mu,2));points(RW,type = 'l',col = 4);
}
centroids <- mvnorm(5,c(0,0),diag(2))
centroids <- mvrnorm(5,c(0,0),diag(2))
centroids
repertoires <- matrix(rpois(8*5,1),ncol = 5)
repertoires
repertoires <- repertoires / apply(repertoires,1,sum)
round(repertoires,2)
repertoires <- matrix(rpois(8*5,3),ncol = 5)
repertoires <- repertoires / apply(repertoires,1,sum)
round(repertoires,2)
differences(repertoires,method = "bray")
library(cluster)
tree <- agnes(differences(repertoires, method = "bray"))
tree <- agnes(differences(repertoires, method = "bray"), method = "ward")
par(mfrow = c(1,1))
plot(tree, which.plot = 2)
table(floor(runif(100,1,8)))
table(floor(runif(100,1,9)))
table(floor(runif(100,1,9)))
replook <- repertoires
replook <- apply(replook,1,cumsum)
dim(replook)
replook <- t(replook)
replook
sum(replook[1,] > runif(1))
sum(replook[1,] > runif(1))
sum(replook[1,] > runif(1))
sum(replook[1,] > runif(1))
examples
examples <- data.frame(bird = floor(runif(1000,1,9)), type = runif(1000))
for(b in 1:8){
f <- examples$bird == b;
examples$type[f] <- 
tmp <- replook[examples$bird,] > examples$type
tmp[1:5,]
examples$type <- apply(replook[examples$bird,] > examples$type, 1, sum)
xtabs(~bird + type, examples)
xtabs(~bird + type, examples) / nrow(examples)
xtabs(~bird + type, examples) / xtabs(~bird,examples)
tmp <- xtabs(~bird + type,examples)
tmp <- tmp / apply(tmp,1,sum)
round(repertoires)
round(repertoires,2)
round(repertoires,1)
round(tmp,1)
for(b in 1:8){
f <- examples$bird == b;
examples$type[f] <- sample(sum(f),1:5,prob=repertoires[b,])
}
?sample
> 
for(b in 1:8){
f <- examples$bird == b;
examples$type[f] <- sample(1:5, sum(f), prob=repertoires[b,]);
}
for(b in 1:8){
f <- examples$bird == b;
examples$type[f] <- sample(1:5, sum(f), prob=repertoires[b,], replace = T);
}
tmp <- xtabs(~bird + type, examples)
tmp <- tmp / apply(tmp,1,sum)
round(tmp,1)
round(repertoires,1)
dimnames(bird) <- list(bird = 1:8, type = 1:5)
dimnames(repertoires) <- list(bird = 1:8, type = 1:5)
round(tmp,1)
round(repertoires,1)
dim(types)
ls()
dim(centroids)
examples$X <- centroids[examples$type,1]+rnorm(nrow(examples))
examples$Y <- centroids[examples$type,2]+rnorm(nrow(examples))
plot(Y~X,examples, pch = bird, col = type)
points(centroids, col = 1:5, pch = 16, cex = 2)
names(examples)
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, 0.4)
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4)
cor(drake)
reptree <- agnes(differences(repertoires,"bray"),method = "ward")
class(repertoires)
reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
psntree <- agnes(as.dist(cor(drake)), method = "ward")
spntree <- agnes(as.dist(cor(apply(drake,2,rank), method = "spearman")), method = "ward")
par(mfrow = c(1,3))
plot(reptree,which.plot = 2)
plot(psntree,which.plot = 2)
plot(spntree,which.plot = 2)
centroids <- mvrnorm(5,rep(10,2),diag(2))
centroids
centroids <- mvrnorm(5,rep(0,2),10*diag(2))
centroids
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples))
plot(Y~X,examples, pch = bird, col = type)
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4)
reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
psntree <- agnes(as.dist(cor(drake)), method = "ward")
spntree <- agnes(as.dist(cor(apply(drake,2,rank), method = "spearman")), method = "ward")
par(mfrow = c(1,3))
plot(reptree,which.plot = 2)
plot(psntree,which.plot = 2)
plot(spntree,which.plot = 2)
centroids <- mvrnorm(5,rep(0,2),100*diag(2))
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples))
 plot(Y~X,examples, pch = bird, col = type)
 drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4)
 reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
 psntree <- agnes(as.dist(cor(drake)), method = "ward")
 spntree <- agnes(as.dist(cor(apply(drake,2,rank), method = "spearman")), method = "ward")

par(mfrow = c(1,3))
 plot(reptree,which.plot = 2)
 plot(psntree,which.plot = 2)
 plot(spntree,which.plot = 2)

cor(drake)
cov(drake)
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples))
 plot(Y~X,examples, pch = bird, col = type)
 drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4)
 reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
 psntree <- agnes(as.dist(cov(drake)), method = "ward")
 spntree <- agnes(as.dist(cov(apply(drake,2,rank), method = "spearman")), method = "ward")
par(mfrow = c(1,3))
 plot(reptree,which.plot = 2)
 plot(psntree,which.plot = 2)
 plot(spntree,which.plot = 2)

reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
 psntree <- agnes(as.dist(exp(-cor(drake))), method = "ward")
 spntree <- agnes(as.dist(exp(-cor(apply(drake,2,rank), method = "spearman"))), method = "ward")
par(mfrow = c(1,3))
 plot(reptree,which.plot = 2)
 plot(psntree,which.plot = 2)
 plot(spntree,which.plot = 2)

dev.off()
x
x <- -100:100 / 100
length(x)
range(x)
plot(x,-exp(x))
plot(x,exp(-x))
exp(1) - exp(-1)
exp(-1)
plot(x,scale(-exp(x),exp(-1),exp(1)-exp(-1)))
plot(x,scale(-exp(x),exp(-1),exp(1)-exp(-1)))
plot(x,scale(exp(-x),exp(-1),exp(1)-exp(-1)))
plot(x,log(2-x))
plot(x,log(2-x)/log(1))
log(1)
plot(x,log(2-x)/log(2))
plot(x,log(2-x)/log(3))
fisher
fisher <- function(rho){ifelse(rho > 0, 0.5 * ( log(1 + rho) - log(1 - rho) ), 0)}
plot(x, fisher(x))
fisher <- function(rho){ifelse(rho != 0, 0.5 * ( log(1 + rho) - log(1 - rho) ), 0)}
plot(x, fisher(x))
plot(x, fisher(x)^2)
cor.to.dist <- function(x){log(2-x) / log(3)}
par(mfrow = c(1,3))
 plot(reptree,which.plot = 2)
 plot(psntree,which.plot = 2)
 plot(spntree,which.plot = 2)

reptree <- agnes(differences(repertoires,method = "bray"),method = "ward")
 psntree <- agnes(as.dist(cor.to.dist(cor(drake))), method = "ward")
 spntree <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "ward")
par(mfrow = c(1,3))
 plot(reptree,which.plot = 2)
 plot(psntree,which.plot = 2)
 plot(spntree,which.plot = 2)

tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum)
reptree <- agnes(differences(tmp,method = "bray"),method = "ward");
idltree <- agnes(differences(repertoires,method = "bray"),method = "ward")
 psntree <- agnes(as.dist(cor.to.dist(cor(drake))), method = "ward")
 spntree <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "ward")
rm(tmp)
tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum);
reptree <- agnes(differences(tmp,method = "bray"),method = "ward");
idltree <- agnes(differences(repertoires,method = "bray"),method = "ward");
 psntree <- agnes(as.dist(cor.to.dist(cor(drake))), method = "ward");
 spntree <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "ward");
rm(tmp);
tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "bray"),method = "ward");
trees$ideal <- agnes(differences(repertoires,method = "bray"),method = "ward");
trees$pearson <- agnes(as.dist(cor.to.dist(cor(drake))), method = "ward");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "ward");
rm(tmp);
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
for(n in names(trees)){
plot(trees[[n]], main = n, which.plot = 2);
}
cor.to.dist
cor.to.dist <- function(x){exp(-x)}
tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "bray"),method = "ward");
trees$ideal <- agnes(differences(repertoires,method = "bray"),method = "ward");
trees$pearson <- agnes(as.dist(cor.to.dist(cor(drake))), method = "ward");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "ward");
rm(tmp);
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(n in names(trees)){
 plot(trees[[n]], main = n, which.plot = 2);
 }

tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "bray"),method = "complete");
trees$ideal <- agnes(differences(repertoires,method = "bray"),method = "complete");
trees$pearson <- agnes(as.dist(cor.to.dist(cor(drake))), method = "complete");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "complete");
rm(tmp);
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(n in names(trees)){
 plot(trees[[n]], main = n, which.plot = 2);
 }

tree <- agnes(as.matrix(examples[,3:4]), method = "ward")
dev.new()
plot(tree, which.plot = 2, labels = examples$type)
plot(tree, which.plot = 2, labels = examples$type, cex.lab = 0.2)
plot(tree, which.plot = 2, labels = examples$type, cex = 0.2)
plot(tree, which.plot = 2, labels = examples$type, cex = 0.2, col =examples$type)
tree <- agnes(as.matrix(examples[,3:4]), method = "complete")
plot(tree, which.plot = 2, labels = examples$type)
plot(examples[,3:4], col = cutree(tree,5))
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(m in c("ward","complete","single","average"){
  tree <- agnes(as.matrix(examples[,3:4]), method = m);
  plot(examples[,3:4], col = cutree(tree,5), main = m);
 }
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(m in c("ward","complete","single","average")){
  tree <- agnes(as.matrix(examples[,3:4]), method = m);
  plot(examples[,3:4], col = cutree(tree,5), main = m);
 }
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(m in c("ward","complete","single","average")){
  tree <- agnes(as.matrix(examples[,3:4]), method = m);
  plot(examples[,3:4], col = cutree(tree,5), main = m, pch = examples$type);
 }
par(mfrow = c(1,1))
plot(tree,which.plot = 2)
rm(tree)
as.matrix(dist(repertoires))
as.matrix(differences(repertoires,"bray"))
as.matrix(differences(repertoires,method="bray"))
par(mfrow = c(1,2))
plot(prcomp(as.matrix(differences(repertoires,method="bray")))$x, pch = 1:8)
tmp <- xtabs(~bird+type,examples)
tmp <- tmp / apply(tmp,1,sum);
plot(prcomp(as.matrix(differences(tmp,method="bray")))$x, pch = 1:8)
pca <- prcomp(rbind(as.matrix(differences(repertoires,method="bray")),as.matrix(differences(tmp,method="bray"))))
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8)
plot(as.matrix(differences(tmp,method="bray")) %*% pca$rotation, pch = 1:8)
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8, asp = 1)
plot(as.matrix(differences(tmp,method="bray")) %*% pca$rotation, pch = 1:8, asp = 1)
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8, asp = 1, xlim = c(-.5,.5), ylim = c(-.75,.5))
plot(as.matrix(differences(tmp,method="bray")) %*% pca$rotation, pch = 1:8, asp = 1, xlim = c(-.5,.5), ylim = c(-.75,.5))
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8, xlim = c(-.5,.5), ylim = c(-.75,.5))
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8, xlim = c(-.5,.5), asp = 1)
plot(as.matrix(differences(repertoires,method="bray")) %*% pca$rotation, pch = 1:8, xlim = c(-.5,.5), asp = 1)
plot(as.matrix(differences(tmp,method="bray")) %*% pca$rotation, pch = 1:8, xlim = c(-.5,.5), asp = 1)
cor.to.dist <- function(x){log(2-x) / log(3)}
centroids <- mvrnorm(5,rep(0,2),4*diag(2));
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples));
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4);
tmp <- xtabs(~bird+type,examples);
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "bray"),method = "complete");
trees$ideal <- agnes(differences(repertoires,method = "bray"),method = "complete");
trees$pearson <- agnes(as.dist(cor.to.dist(cor(drake))), method = "complete");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "complete");

dev.set(2)
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(n in names(trees)){
 plot(trees[[n]], main = n, which.plot = 2);
 }

cor.to.dist
dev.off()
dev.off()
plot(x,cor.to.dist(x))
plot(x,cor.to.dist(x),asp=1)
cor.to.dist(0)
plot(x,exp(-x))
plot(x,exp(-x)/exp(1))
plot(x,log(100-x))
plot(x,log(1-1/x))
plot(x,log((1+x)/(1-x)))
plot(x,log(1+x))
plot(x,-log(1+x))
?difference
?differences
?neighbors
help
args(help)
help(differences, package = differences)
args(help)
help(differences, lib.loc = differences)
dim(cor(drake))
dim(as.matrix(differences(t(drake), method = "hellinger")))
as.matrix(differences(t(drake), method = "hellinger"))
centroids <- mvrnorm(5,rep(0,2),4*diag(2));
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples));
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4);
tmp <- xtabs(~bird+type,examples);
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "bray"),method = "complete");
trees$ideal <- agnes(differences(repertoires,method = "bray"),method = "complete");
trees$hellinger <- agnes(differences(t(drake), method = "hellinger"), method = "complete");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "complete");
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(n in names(trees)){
 plot(trees[[n]], main = n, which.plot = 2);
 }

centroids <- mvrnorm(5,rep(0,2),4*diag(2));
examples[,3:4] <- centroids[examples$type,]+rnorm(2*nrow(examples));
drake <- draccaj(as.matrix(examples[,3:4]), examples$bird, p.neighbors = 0.4);
tmp <- xtabs(~bird+type,examples);
tmp <- tmp / apply(tmp,1,sum);
trees <- list();
trees$observed <- agnes(differences(tmp,method = "hellinger"),method = "complete");
trees$ideal <- agnes(differences(repertoires,method = "hellinger"),method = "complete");
trees$hellinger <- agnes(differences(t(drake), method = "hellinger"), method = "complete");
trees$spearman <- agnes(as.dist(cor.to.dist(cor(apply(drake,2,rank), method = "spearman"))), method = "complete");
par(mfrow = c(2,2), mar = c(10,10,10,2)/3, mgp = 2 * c(3,1,0) / 3)
 for(n in names(trees)){
 plot(trees[[n]], main = n, which.plot = 2);
 }

runif(4) * diag(4)
(1:4) * diag(4)
range(x)
range(2-x)
dev.off()
plot(x,log(1-x))
plot(x,exp(-x))
?diss
q('no')
