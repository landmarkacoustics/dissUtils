x
x <- 5
try(x <- 8,T)
x
try(x <- log("A"),T)
x
x <- 5
try(x <- log("A"),T)
x
I
I(10)
?I
?identity
?diag
?all
diag(nrow=5)
source("tmp.R")
foo(3)
?match.args
?match.arg
?dist
tmp <- function(a = c("foo","bar","baz"))
{return(match.arg(a))z}
tmp <- function(a = c("foo","bar","baz"))
{return(match.arg(a));}
tmp("blah")
try(tmp("blah")
)
tmp("f")
tmp("ba")
tmp("bargain")
args(plot)
?plot
example(plot)
example(dist)
?as.matrix
class(x)
ls()
is.matrix(NULL)
length(x)
dim(x) <- c(2,3)
dimnames(x) <- list("rows", "cols")
x
dimnames(x) <- list(rows = 1:2, cols = 1:3)
class(x)
x
attr(x)
attributes(x)
attributes(y)
is.null(attributes(y)$dim)
is.null(attributes(x)$dim)
X <- data.frame(x, y)
X
is.null(attributes(X)$dim)
attributes(X)
dim(X)
attributes(X)$dim <- dim(X)
args(plot)
dyn.load("differences")
dyn.load("differences.dll")
dyn.load("src/differences.dll")
dyn.load("../src/differences.dll")
dim(X)
.C("differences", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot==double(15))$oot
.C("differences", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(15))$oot
oot
.C("differences", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(15))
class(X)
class(x)
dim(x)
X <- as.matrix(X)
.C("differences", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(15))$oot
X[is.inf(X)] <- 100
X[is.infinite(X)] <- 100
.C("differences", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(15))$oot
X
matrix(.C("neighbors", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(15), 2)$oot, byrow = 2, ncol = 2)
matrix(.C("neighbors", as.double(X), as.integer(dim(X)), "euclidean", 0, 0, oot=double(16), 2)$oot, byrow = 2, ncol = 2)
dyn.unload("../src/differences.dll")
q('no')
X <- matrix(rnorm(50),ncol = 5)
Y <- matrix(rnorm(25), ncol = 5)
ncol(X)==ncol(Y)
ncol(NULL)
ncol(NULL)==ncol(X)
cat(ifelse(NULL, "yes", "no"))
cat(ifelse(NULL, "yes", "no"),"\n")
if(NULL){cat("yes\n")}else{cat("no\n")}
Y==NULL
NULL == NULL
is.null(NULL)
ncol(rnorm(5))
?assert
error
?try
?try
?tryCatch
example(tryCatch)
demo(error.catching)
tryCatch(log(-1), error = function(e){cat("an error happened\n");})
tryCatch(log(-1), error = function(e){cat("an error happened\n");}, warning = function(w){cat("an error happened\n");})
tryCatch(log(0), error = function(e){cat("an error happened\n");}, warning = function(w){cat("an error happened\n");})
?stop
argies <- c("den", "mah", "foo", "bar")
match.args("d", argies)
match.arg("d", argies)
match.arg("foo", argies)
match.arg("blah", argies)
match.arg(pi, argies)
pi
dir()
src("differences.R")
source("differences.R")
dyn.load("../src/differences.dll")
differences(X)
source("knownmethods.R")
differences(X)
source("knownmethods.R")
source("differences.R")
differences(X)
length(differences(X))
dim(X)
as.dist(differences(X))
tmp <- differences(X,Y)
dim(tmp)
length(tmp)
nrow(X)
dim(tmp) <- c(nrow(X),nrow(Y))
tmp
dyn.unload("../src/differences.dll")
as.integer("hello, world!")
as.raw("hello, world!")
source("neighbors.R")
source("neighbors.R")
source("knownmethods.R")
source("differences.R")
tmp <- difference(X,Y)
tmp <- differences(X,Y)
dyn.unload("../src/differences.dll")
dyn.load("../src/differences.dll")
tmp <- differences(X,Y)
dim(tmp)
tmp
nrow(X)
nrow(Y)
tmp <- differences(X,"hello world")
?set.seed
.Random.seed
print(.Random.seed)
set.seed(42)
.Random.seed
exists(.Random.seed)
?exists
exists(".Random.seed")
HELP
HELP <- NULL
exists("HELP")
HELP
P
Q
source("R/examples.R")
dir()
source("examples.R")
source("examples.R")
apply(P,1,sum)
source("examples.R")
?dyn.load
?SHLIB
?library.dynam
.Platform$dynlib.ext
dyn.load(paste("differences",.Platform$dynlib.ext,sep="."));
setwd("..")
dyn.load(paste("differences",.Platform$dynlib.ext,sep="."));
dyn.load(paste("differences",.Platform$dynlib.ext,sep=""));
source("examples.R")
source("R/examples.R")
difference
dir()
dir("R")
source("R/examples.R")
source("R/examples.R")
Ycheb
Yneigh
source("R/examples.R")
Ycheb
Yneigh
for(i in 1:nrow(Yneigh)){
Yneigh[i,2] <- match(Ycheb[i,], Yneigh[i,1])
}
i
Yneigh[,2] <- numeric(nrow(Yneigh))
Yneigh <- cbind(Yneigh, numeric(nrow(Yneigh)))
for(i in 1:nrow(Yneigh)){
Yneigh[i,2] <- match(Ycheb[i,], Yneigh[i,1])
}
source("R/examples.R")
indices <- integer(nrow(Yneigh));
match(Ycheb[1,], Yneigh[1,1])
match(Yneigh[1,1], Ycheb[1,])
for(i in 1:nrow(Yneigh)){
indices[i] <- match(Yneigh[i,1], Ycheb[i,]);
}
indices
source("R/examples.R")
for(i in 1:nrow(Yneigh)){indices[i] <- match(Yneigh[i,1], Ycheb[i,]);}
indices
indices <- matrix(integer(length(Yneigh)), nrow(Yneigh), ncol(Yneigh), dimnames = dimnames(Yneigh)))
indices <- matrix(integer(length(Yneigh)), nrow(Yneigh), ncol(Yneigh), dimnames = dimnames(Yneigh))
indices
for(i in 1:nrow(Yneigh)){
active.lookup <- Ycheb[i,];
for(j in 1:ncol(Yneigh)){
indices[i,j] <- match(Yneigh[i,j], active.lookup);
}}
indices
is.matrix(Ycheb)
class(Ycheb)
tmp <- difference(P,method ="bray")
tmp <- differences(P,method ="bray")
class(tmp)
is.dist(tmp)
is.class
any("dist" in class(tmp))
?any
?or
?and
?all
?plot
q('no')
source("R/examples.R")
dir()
setwd("../")
source("R/examples.R")
?all
q('no')
unit.hypersphere.volume <- function(D){
    return((2 * pi ^ (D / 2)) / (D * gamma(D/2)));
}

wikipedia
wikipedia <- function(D){
return((2 * pi ^ (D/2)) / gamma(D/2 + 1));
}
unit.hypersphere.volume(1:8)
wikipedia(1:8)
wikipedia <- function(D){
return((pi ^ (D/2)) / gamma(D/2 + 1));
}
unit.hypersphere.volume(1:8)
wikipedia(1:8)
source("unit_hypersphere_volume.R")
unit.hypersphere.volume(1:8)
q('no')
setwd("~/Desktop/Budgies 2012/good stuff.rwkspce")
setwd("~/Desktop/Budgies 2012")
load("good stuff.rwkspce")
q("no")
